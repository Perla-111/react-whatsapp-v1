{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KALYANKUMAR\\\\Downloads\\\\whatsapp_v1\\\\whatsapp_v1\\\\src\\\\components\\\\chatpage\\\\body\\\\chatbody.js\",\n    _s = $RefreshSig$();\n\nimport './chatbody.css';\nimport { IconButton } from \"@material-ui/core\";\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useEffect, useState, useRef } from 'react';\nimport cx from 'classnames';\nimport testData from \"../../../data/sample/testData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar sent = true;\nvar received = true;\nvar rCount = 0,\n    sCount = 0;\n\nconst ChatBody = props => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [data, setData] = useState([]); //const { data2 } = props.location;\n  //console.log(props);\n\n  useEffect(() => {\n    setData(testData.c2);\n  }, []);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: [data && data.map((text, index) => {\n        if (text.type === 'sent') {\n          if (sCount === 0) {\n            sCount++;\n            rCount = 0;\n            received = true;\n          } else {\n            sent = false;\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cx({\n              \"chat-message-sent\": sent,\n              \"chat-message-sent-repeat\": !sent\n            }),\n            children: [text.msg, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-timestamp-s\",\n              children: [new Date().getHours().toString(), \":\", new Date().getMinutes().toString(), \"\\xA0pm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), sent && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bubble-sent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 20\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 20\n          }, this);\n        } else {\n          if (rCount === 0) {\n            rCount++;\n            sCount = 0;\n            sent = true;\n          } else {\n            received = false;\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: cx({\n              \"chat-message\": received,\n              \"chat-message-repeat\": !received\n            }),\n            children: [text.msg, received && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bubble-received\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-timestamp-r\",\n              children: [new Date().getHours().toString(), \":\", new Date().getMinutes().toString(), \"\\xA0pm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 24\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message\",\n            value: text,\n            onChange: e => {\n              setText(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(CameraAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          style: {\n            outlineWidth: '0'\n          },\n          onClick: () => {\n            setText('');\n\n            if (text.length > 0) {\n              setData([...data, {\n                msg: text,\n                type: 'sent'\n              }]);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(MicIcon, {\n            style: {\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatBody, \"UnjKoYoRHPpOs+scVusToG3M9pA=\");\n\n_c = ChatBody;\nexport default ChatBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"sources":["C:/Users/KALYANKUMAR/Downloads/whatsapp_v1/whatsapp_v1/src/components/chatpage/body/chatbody.js"],"names":["IconButton","InsertEmoticonIcon","AttachFileIcon","CameraAltIcon","MicIcon","useEffect","useState","useRef","cx","testData","sent","received","rCount","sCount","ChatBody","props","text","setText","data","setData","c2","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","map","index","type","msg","Date","getHours","toString","getMinutes","e","target","value","outlineWidth","length","color"],"mappings":"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","sourcesContent":["import './chatbody.css';\r\n\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nimport {useEffect, useState, useRef} from 'react';\r\nimport cx from 'classnames';\r\nimport testData from \"../../../data/sample/testData\";\r\n\r\nvar sent = true;\r\nvar received = true;\r\nvar rCount=0,sCount=0;\r\n\r\nconst ChatBody = (props) => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [data,setData] = useState([]);\r\n\r\n    //const { data2 } = props.location;\r\n\r\n    //console.log(props);\r\n\r\n    useEffect(()=>{\r\n        setData(testData.c2);\r\n    },[]);\r\n\r\n    const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n  }, [data]);\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"chat-body\">\r\n\r\n        {data&&data.map((text,index)=>{\r\n            if(text.type==='sent'){\r\n                if(sCount===0){\r\n                    sCount++;\r\n                    rCount=0;\r\n                    received = true;\r\n                }\r\n                else {\r\n                    sent=false;\r\n                }\r\n            return <div key={index} className={cx({\"chat-message-sent\" : sent,\r\n            \"chat-message-sent-repeat\" : !sent})}>\r\n            {text.msg}\r\n            <span className=\"chat-timestamp-s\">\r\n                {new Date().getHours().toString()}:\r\n                {new Date().getMinutes().toString()}&nbsp;pm\r\n            </span>\r\n            {sent&&<span className=\"bubble-sent\"></span>}\r\n        </div>\r\n            }\r\n\r\n\r\n\r\n            else {\r\n                if(rCount===0){\r\n                    rCount++;\r\n                    sCount=0;\r\n                    sent = true;\r\n                }\r\n                else {\r\n                    received=false;\r\n                }\r\n                return <p key={index} className={cx({\"chat-message\" : received,\r\n                \"chat-message-repeat\" : !received})}>\r\n            {text.msg}\r\n            {received&&<span className=\"bubble-received\"></span>}\r\n            <span className=\"chat-timestamp-r\">\r\n                {new Date().getHours().toString()}:\r\n                {new Date().getMinutes().toString()}&nbsp;pm\r\n            </span>\r\n        </p>\r\n        }})}\r\n\r\n<div ref={messagesEndRef} />\r\n    \r\n    </div>\r\n    <div className=\"input-actions\" >\r\n                <div className=\"left\">\r\n                    <div className=\"msg\">\r\n                    <IconButton >\r\n                        <InsertEmoticonIcon />\r\n                    </IconButton>\r\n                    <input type=\"text\"\r\n                    placeholder=\"Type a message\" \r\n                    value={text}\r\n                    onChange={(e)=>{setText(e.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <IconButton>\r\n                        <AttachFileIcon />\r\n                    </IconButton>\r\n                    <IconButton >\r\n                        <CameraAltIcon />\r\n                    </IconButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <IconButton \r\n                    style = {{outlineWidth:'0'}}\r\n                     onClick={()=>{setText('');\r\n                     if(text.length>0){\r\n                        setData([...data,{msg : text,type :'sent'}])\r\n                     }\r\n                     }}>\r\n                        <MicIcon style={{color:\"white\"}} \r\n                         />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport default ChatBody;"]},"metadata":{},"sourceType":"module"}